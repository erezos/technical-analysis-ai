# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Set minimum iOS deployment target to 13.0 for Firebase compatibility
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Allow non-modular includes for older dependencies
      config.build_settings['ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # Fix for Xcode 16 and BoringSSL-gRPC compatibility issues
      if target.name.include?('BoringSSL') || target.name.include?('gRPC') || target.name.include?('grpc')
        # Remove problematic flags that cause Xcode 16 issues
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= []
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'].reject! { |flag| 
          flag.include?('GCC_WARN_INHIBIT_ALL_WARNINGS') 
        }
        
        # Remove the problematic -G flag
        config.build_settings['OTHER_CFLAGS'] ||= []
        config.build_settings['OTHER_CFLAGS'].reject! { |flag| flag == '-G' }
        
        # Add specific header search paths for address_sorting and OpenSSL
        config.build_settings['HEADER_SEARCH_PATHS'] ||= []
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_TARGET_SRCROOT)/src/core/ext/filters/client_channel/lb_policy/address_sorting'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_TARGET_SRCROOT)/third_party/address_sorting/include'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/gRPC-Core/src/core/ext/filters/client_channel/lb_policy'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/gRPC-Core/third_party/address_sorting/include'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/BoringSSL-GRPC/src/include'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/BoringSSL-GRPC/src/ssl'
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/BoringSSL-GRPC/src'
        
        # Disable problematic warnings for gRPC
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = 'NO'
        
        # Fix for missing address_sorting headers and OpenSSL issues
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_ARES=0'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GPR_FORBID_UNREACHABLE_CODE=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_DISABLE_SSL_KEY_LOGGING=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_NO_XDS=1'
        
        # Disable XDS components that cause OpenSSL header issues
        if target.name == 'gRPC-Core'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_XDS_USER_AGENT_NAME_SUFFIX=""'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_XDS_USER_AGENT_VERSION_SUFFIX=""'
        end
      end
      
      # Firebase specific fixes
      if target.name.include?('Firebase')
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        
        # Fix for @_implementationOnly warnings
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
      end
      
      # General Xcode 16 compatibility fixes
      config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      config.build_settings['ENABLE_STRICT_OBJC_MSGSEND'] = 'NO'
      config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'NO'
      
      # Swift 6 compatibility
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Code signing fixes for iOS 13+
      if config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'].nil?
        config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = 'com.technicalanalysis.ai.${PRODUCT_NAME:rfc1034identifier}'
      end
    end
  end
end
